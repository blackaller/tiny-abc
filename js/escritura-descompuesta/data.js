var text = "Hace tiempo un profesor me hizo la siguiente pregunta \"¿Qué te gusta más, y qué te cuesta más trabajo, escribir ensayos, o códigos de programación?\" En principio su interrogante me pareció torpe y desatinada. No es posible comparar ambos procesos; son demasiado diferentes. No puedo saber cual me gusta más. Cuando escribo un ensayo, o cualquier otro texto que hace uso del lenguaje natural, lo hago para que otro ser humano —mi lector— entienda un aspecto u otro del tema que me concierne, si tengo suerte hilando ecos de mi palabra en el monólogo de su pensamiento. Mi objetivo es poder decir algo, y la dificultad radica en articular con claridad, elegancia y convicción el coro de argumentos en mi cabeza. Cuando escribo un programa de computadora, en cambio, mi objetivo es preparar un instructivo que la computadora usará para ejecutar un conjunto de procesos previamente diseñados por mí o por alguien más.\n\"No estoy seguro que pueda responder a tu pregunta\", le dije. \"Para mí, la escritura y la programación son universos prácticamente ajenos.\"— Mi evasiva respuesta pareció satisfacer al profesor, pero a mí me dejó confundido. Por banal que pudiera parecer, la existencia de su pregunta me abrió las puertas a un complejo laberinto multidimensional, repleto de niveles y espejismos. En su caprichosa configuración, el laberinto me invitó a ignorar los condicionales determinados por el contexto —\"escribir sirve para esto, programar sirve para esto, etcétera\"— e imaginar la escritura como el proceso [humano] de manipular los caracteres de un alfabeto para producir secuencias finitas de contenido variable. En estos términos una carta, una novela, el código fuente de una página web, o una demostración matemática son el resultado de acciones similares. Esta visión cibernética entiende al escritor (o programador) como una caja negra que produce un texto en función de un estímulo. Como el cuadrado que es tocado por una manzana en Flatland, de momento se me reveló un intrincado sistema de relaciones trazado entre las distintas formas de escribir conocidas por el ser humano en su historia. El lenguaje natural y su literatura,  la lógica formal, la matemática y los lenguajes de programación emergieron del tumulto sin propósito de un torrente de símbolos, alfabetos y palabras como escaleras de caracol en las catacumbas de un grabado de M. C. Escher. Sin un sistema de representación simbólica como la escritura, estas modalidades del pensamiento carecen de perseverancia y profundidad. La escritura es en primer lugar memoria, la única de defensa en contra del efecto devastador del tiempo. Pero también es evocación, guía y recetario. No es casualidad que las primeras obras literarias escritas por la humanidad —de carácter mitológico y religioso— sean en su mayoría guías de conducta, es decir, sistemas morales de programación social. En su modalidad imperativa, el lenguaje natural es un lenguaje de programación, y el texto escrito es un programa.\nEn su modalidad de información, el resultado de un proceso de escritura se reduce a un problema de enumeración combinatoria. Basta tener el tiempo necesario, y una máquina de producción aleatoria de secuencias de caracteres encontrará toda expresión literaria o especulación científica que pudiera jamás haber sido concebida. \"El tiempo necesario\", por supuesto, puede ser el resultado de calcular una serie de potencias sobre la edad del universo. En el espacio entre la nada y el más pequeño de los infinitos caben cantidades tan grandes que hacen parecer al cero y al número total de electrones en el universo tan cercanos en la recta numérica como lo son en esta página las últimas dos letras que acabas de leer. En términos prácticos no hay de qué preocuparse; el programa generador de todo lo \"escribible\" [sic] es un objeto teórico que no podrá existir, excepto en combinación con un dispositivo de manipulación temporal que permitiera recorrer temporadas de dimensión cósmica en cuestión de microsegundos. La escala humana enfrenta el absurdo ante semejantes posibilidades. Con suficiente tiempo, un programa de computadora podría generar solamente los textos que comunicaran cierto argumento, y separar los mejor escritos en función de claridad, longitud y estilo. Podría crear asimismo un conjunto de autores, generar sus obras y puntos de vista, sus conversaciones, alianzas, rivalidades, y escuelas de pensamiento.\nTres años antes de hacerme la pregunta que me confundió hace un par de párrafos, el mismo profesor escribió un libro llamado Creative Code, o Código Creativo. En principio, ese título me pareció tan torpe y desatinado como su pregunta —el acto de programar es en general un acto esencialmente creativo— pero al cabo de pensar un rato, me metí de nuevo en un intrincado sistema de proposiciones ambivalentes alrededor de la escritura, la programación, el texto y el código. El contenido del libro explora el potencial del medio digital a través de una serie de experimentos en diseño de interfaces que buscan trascender el uso principalmente utilitario que se atribuye a la computadora en nuestro tiempo. La tesis del profesor es que los autores de dichos experimentos pertenecen a una clase creativa especial, siendo capaces de actuar en paralelo como programadores y como diseñadores. Esta \"ventaja\" les permite trascender los paradigmas convencionales de diseño digital en que se ven atrapados los programadores que no saben diseñar cuando trabajan con diseñadores que no saben programar. Por esta razón, pensé que el título del libro quería significar Programación Creativa, o \"programación que requiere un tipo de creatividad especial\",  pero el hecho es que Código Creativo quiere decir otra cosa: Código capaz de crear. Y en este sentido las doscientas cincuenta y seis páginas del libro del profesor no arrojan ninguna luz ante la posibilidad de que un programa de computadora pueda, por ejemplo, escribir un soneto sin que esta habilidad haya sido incorporada como parte del programa en cierta medida por el programador. En el contexto de un sistema humano-computacional en acción —por ejemplo, un usuario cualquiera escribiendo en su computadora portátil, o sacando fotos con su teléfono celular— es el componente humano quien es responsable del aspecto creativo en la relación. Regresando al tema del soneto, el trabajo de generarlo utilizando un método exhaustivo es equivalente a encontrarlo en algún anaquel de algún librero en alguna variación de La Biblioteca de Babel.\nEl código de un programa de computadora puede describir el comportamiento de un sistema de comunicación, o los procesos que habrán de simular el metabolismo de un organismo biológico. Al escribir un texto narrativo, el autor se coloca a sí mismo dentro de un intrincado laberinto le permite que trazar los puntos de vista, motivaciones, estado emocional, y secuencias de decisiones de cada uno de sus personajes. La narración en cierta medida consiste de trazar una gráfica dirigida de acciones dentro del espacio [pseudo] topológico definido por el tiempo en que transcurre la narración y todas las acciones —con sus respectivos conjuntos de motivaciones, estados emocionales y puntos de vista— que ocurren en el mundo en que transcurre la narración. Dónde comenzar, hacia dónde dirigir la mirada, cuándo recordar o saltar a la cabeza de otro personaje son decisiones que el autor hace en función del efecto que busca provocar en su lector imaginario. Sin saber de antemano la trama causal de la narración completa, el autor se ve forzado a tomar otra serie de decisiones cada vez que uno de sus personajes enfrenta una disyuntiva. Para el programador, es el programa quien idealmente será responsable de tomar cada decisión enfrentada por el autor. Al escribir, por ejemplo, un programa que escribe novelas, el programador buscará generar (o definir) el espacio y contexto de los acontecimientos en que ocurre la narración en forma de datos, y un proceso subsecuente buscará la mejor manera de cubrir estos acontecimientos en función de una determinada intención narrativa. Los problemas creativos enfrentados por el autor son considerados en términos cuantitativos y transformados en procesos computables. El programador intentará describir en términos lógicos conceptos que el autor literario intuye con naturalidad, como lo son estilo e intención narrativa, o inventar un proceso computacional capaz de determinarlos. ¿Qué significa la palabra \"mejor\" en \"la mejor manera de cubrir una serie de acontecimientos\"? En términos literarios, es por definición —o por medio de un acto de fe cultural— que aceptamos la versión de Shakespeare como la forma natural en que Macbeth debe ser narrado y puesto en escena, pero ¿cómo podemos estar seguros? Cuando Pierre Menard volvió a escribir el Quijote, su conexión mental con el espacio de todo lo escrito le permitió acceso al registro en que la versión escrita por Cervantes estaba guardada —¿pero qué si hubiera encontrado una versión modificada, o simplemente diferente, tal vez mejor en cierto sentido que la versión original?\nEs evidente la existencia de múltiples elementos en el conjunto descrito por \"todo texto escrito en cualquier lenguaje que haya gozado de suficiente valor cultural en determinado momento para alguna cultura humana\". La obra literaria de todos mis autores favoritos pertenece a este conjunto, al igual todo texto importante de naturaleza científica, y el código fuente de programas de computadora relevantes, incluyendo los sitios de internet más importantes nuestro tiempo. La reciente inclusión del programa de computadora en este conjunto da un giro interesante a la idea que normalmente se tiene de un texto. A pesar de ser escrito en una combinación de lenguaje natural y formal, el código fuente de un sitio de internet —el de la página de búsqueda de Google,  por ejemplo— fue escrito para computadoras y robots, pero permanece legible para seres humanos iniciados en el discurso digital.  Más aun, en su naturaleza de conjunto de instrucciones que mantienen en funcionamiento una red de experiencias digitales interactivas, dicho código fuente ha sufrido múltiples iteraciones en el intervalo relativamente corto de su existencia, y será conservado históricamente no como el texto definitivo al que nos acostumbró la idea de autor en la era moderna europea, sino más en la forma del folclor medieval, o las formas literarias que se han conservado a través de múltiples variaciones por medio de la tradición oral en culturas carentes de sistemas de escritura, como un sistema de contenidos en flujo continuo, interrumpido solamente por la pausa o terminación de su ciclo de ejecución.\nSi bien la escritura del código de un programa digital y el texto de una obra literaria requieren mentalidades diferentes, esta divergencia se vuelve insalvable en el caso de la lectura.  Autores como Lem, Borges,  Perec y Queneau incorporaron ideas matemáticas y métodos computacionales al quehacer de su literatura décadas antes de que la computadora pudiera ser programada con fines prácticos, y la lista de programadores profesionales que son igualmente prolíficos en el terreno de la literatura crece cada día. Basta con mencionar a Ted Chiang y Charlie Stross para ilustrar este caso. Más aún, existe una nueva clase de autor, que trata el texto de programación y el texto literario como partes unificadas del acto mental de escribir en la era digital, produciendo programas que generan, manipulan y transforman el resultado que se presenta al lector. Pero cuando se trata de leer, precisamente, el código de programación es ingerido por su lector en forma similar a un texto de matemáticas, con la intención principal de aprender cómo resolver un problema, o encontrar la forma de ejecutar un proceso. Este tipo de lectura no es un fin en si mismo, sino un medio dedicado a servir otros propósitos, y difiere fundamentalmente del proceso de lectura que requiere una obra literaria precisamente en eso: la lectura del texto literario es un fin en sí mismo, su razón de ser. El texto literario existe para ser leído, y el código de programación existe para ejecutar un programa.\nAl intercambiar la palabra escribir por la palabra leer en la pregunta que dio inicio a este texto, mi respuesta inmediata hubiera sido \"Me gusta más leer ensayos, y me cuesta más trabajo leer códigos de programación\". Tal vez la naturaleza esencialmente diferente de ambos tipos de lectura me permite decidir por uno o por otro de manera inmediata. Por el contrario, al considerar ambos tipos de escritura enfrenté un inminente conflicto moral ¿Cómo atreverme a preferir el uno sobre el otro? Sería como atreverme a preferir Poesía sobre Geometría, Topología sobre tragedia, Homero contra Pitágoras en un absurdo sueño de lucha libre dominical. Diez mil setecientos sesenta y nueve caracteres más tarde, me encuentro caminando en círculos, atrapado en el enredo existencial de mis propias palabras. Puedo comparar pero no quiero decidir."